{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/janerasmus/Documents/Projects/insightbox-masterchef-demo/src/app/api/chatgpt/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { prompt, comparisonData, country1, country2 } = body;\n\n    console.log('ü§ñ ChatGPT API Route: Generating insights for', country1, 'vs', country2);\n\n    if (!process.env.OPENAI_API_KEY) {\n      return NextResponse.json(\n        { error: 'OpenAI API key not configured' },\n        { status: 500 }\n      );\n    }\n\n    const completion = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are a knowledgeable geography and economics expert. Provide factual, interesting insights about country comparisons. Use markdown formatting for structure.\"\n        },\n        {\n          role: \"user\",\n          content: prompt\n        }\n      ],\n      max_tokens: 1000,\n      temperature: 0.7,\n    });\n\n    const content = completion.choices[0]?.message?.content || 'No response generated';\n\n    console.log('‚úÖ ChatGPT response generated successfully');\n\n    return NextResponse.json({\n      content,\n      role: 'assistant'\n    });\n\n  } catch (error) {\n    console.error('‚ùå ChatGPT API route error:', error);\n    return NextResponse.json(\n      { error: `Server error: ${error instanceof Error ? error.message : 'Unknown error'}` },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEA,MAAM,SAAS,IAAI,wKAAA,CAAA,UAAM,CAAC;IACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc;AACpC;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;QAEvD,QAAQ,GAAG,CAAC,iDAAiD,UAAU,MAAM;QAE7E,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAgC,GACzC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,aAAa,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtD,OAAO;YACP,UAAU;gBACR;oBACE,MAAM;oBACN,SAAS;gBACX;gBACA;oBACE,MAAM;oBACN,SAAS;gBACX;aACD;YACD,YAAY;YACZ,aAAa;QACf;QAEA,MAAM,UAAU,WAAW,OAAO,CAAC,EAAE,EAAE,SAAS,WAAW;QAE3D,QAAQ,GAAG,CAAC;QAEZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA,MAAM;QACR;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,CAAC,cAAc,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,iBAAiB;QAAC,GACrF;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}